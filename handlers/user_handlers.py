import time

from copy import deepcopy
from aiogram import F, Router
from aiogram.filters import Command, CommandStart
from aiogram.types import CallbackQuery, Message
from aiogram.exceptions import TelegramBadRequest

from keyboards.base_kb import create_kb
from lexicon.lexicon import LEXICON_COMMAND, LEXICON
from database.database import users_db, new_user
from services.funcs import wait_process, main_process_answer, mantra_process, to_k_m

router = Router()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –°–¢–ê–†–¢
@router.message(CommandStart())
async def process_start_command(message: Message):

    if message.from_user.id not in users_db:
        users_db[message.from_user.id] = deepcopy(new_user)
        users_db[message.from_user.id]['time_0'] = time.time()

    await message.answer(text='üïâ <b>–°–û–ó–ï–†–¶–ê–ô</b> üïâ\n\n'
                              '–¶–≤–µ—Ç–µ–Ω–∏–µ <b>–ß–∞–∫—Ä</b>\n'
                              '–ü–∏—Ç–∞–π –∏—Ö —Å–æ–∫–æ–º <b>–°–∞–º–∞–¥—Ö–∏</b>\n'
                              '–ü–æ–∂–Ω–∏ —Ü–≤–µ—Ç–µ–Ω–∏—è <b>–ú–∞–Ω—Ç—Ä–∞–º–∏</b>\n'
                              '–û–±—Ä–µ—Ç–∏ –∏–∑ –Ω–∏—Ö <b>–í–æ–ª—é</b>\n'
                              '–ß—Ç–æ –±—ã —É–∫—Ä–µ–ø–∏—Ç—å\n\n'
                              'üïâ <b>–°–û–ó–ï–†–¶–ê–ù–ò–ï</b> üïâ', 
                         reply_markup=create_kb(f"{to_k_m('speed', message.from_user.id)}üëÅ -> 1üåÄ"))
    
    

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –•–ï–õ–ü
@router.message(Command(commands='mantras'))
async def process_help_command(message: Message):
    await message.answer(LEXICON[message.text])


# –ò–Ω–õ–∞–π–Ω –æ–±—Ä–∞–±–æ—Ç–∫–∞ –°–û–ó–ï–†–¶–ê–ù–ò–Ø
@router.callback_query((F.data == 'wait') | (F.data == 'muladhara' ) | (F.data == 'svadhishthana') | (F.data == 'manipura') | 
                (F.data == 'anahata') | (F.data == 'vishuddha') | (F.data == 'ajna') | 
                (F.data == 'sahasrara') | (F.data == 'will' ))
async def process_wait_command(callback: CallbackQuery):

    if callback.data == 'wait':

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞
        wait_process(callback.from_user.id)

        # –ß—Ç–æ –±—ã —É–±—Ä–∞—Ç—å –æ—à–∏–±–∫—É –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        try:    
            await callback.message.edit_text(text=main_process_answer(callback.from_user.id),
                                            reply_markup=create_kb(f"{to_k_m('speed', callback.from_user.id)}üëÅ -> 1üåÄ"))
        except TelegramBadRequest:
            await callback.answer()
    
    else:
        mantra_process(callback.from_user.id, callback.data)

        # –ß—Ç–æ –±—ã —É–±—Ä–∞—Ç—å –æ—à–∏–±–∫—É –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        try:    
            await callback.message.edit_text(text=main_process_answer(callback.from_user.id),
                                            reply_markup=create_kb(f"{to_k_m('speed', callback.from_user.id)}üëÅ -> 1üåÄ"))
        except TelegramBadRequest:
            await callback.answer()
     



   
